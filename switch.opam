opam-version: "2.0"
compiler: ["ocaml-system.4.12.0"]
roots: [
  "cmitomli.1.0.0"
  "coq.8.18.0"
  "coq-of-ocaml.dev"
  "coq-quickchick.2.0.2"
  "core.v0.15.1"
  "core_unix.v0.15.2"
  "menhir.20231231"
  "merlin.4.7-412"
  "ocaml-print-intf.1.2.0"
  "ocaml-system.4.12.0"
  "ppx_quickchick_ocaml.~dev"
  "ppx_tools.6.6"
  "qco.~dev"
  "quickchick_ocaml.~dev"
  "utop.2.13.1"
]
installed: [
  "angstrom.0.16.0"
  "astring.0.8.5"
  "atd.2.15.0"
  "atdgen.2.15.0"
  "atdgen-runtime.2.15.0"
  "atdts.2.15.0"
  "base.v0.15.1"
  "base-bigarray.base"
  "base-bytes.base"
  "base-threads.base"
  "base-unix.base"
  "base_bigstring.v0.15.0"
  "base_quickcheck.v0.15.0"
  "bigstringaf.0.9.1"
  "bin_prot.v0.15.0"
  "biniou.1.2.2"
  "bisect_ppx.2.8.3"
  "bos.0.2.1"
  "camlp-streams.5.0.1"
  "cmdliner.1.2.0"
  "cmitomli.1.0.0"
  "conf-gmp.4"
  "coq.8.18.0"
  "coq-core.8.18.0"
  "coq-elpi.2.0.0"
  "coq-ext-lib.1.2.1"
  "coq-hierarchy-builder.1.7.0"
  "coq-mathcomp-ssreflect.2.2.0"
  "coq-of-ocaml.dev"
  "coq-quickchick.2.0.2"
  "coq-simple-io.1.8.0"
  "coq-stdlib.8.18.0"
  "coqide-server.8.18.0"
  "core.v0.15.1"
  "core_kernel.v0.15.0"
  "core_unix.v0.15.2"
  "cppo.1.6.9"
  "csexp.1.5.2"
  "dot-merlin-reader.4.5"
  "dune.3.13.0"
  "dune-build-info.3.13.0"
  "dune-configurator.3.13.0"
  "easy-format.1.3.4"
  "elpi.1.18.1"
  "expect_test_helpers_core.v0.15.0"
  "fieldslib.v0.15.0"
  "fmt.0.9.0"
  "fpath.0.7.3"
  "int_repr.v0.15.0"
  "jane-street-headers.v0.15.0"
  "jst-config.v0.15.1"
  "lambda-term.3.3.2"
  "logs.0.7.0"
  "lwt.5.7.0"
  "lwt_react.1.2.0"
  "menhir.20231231"
  "menhirCST.20231231"
  "menhirLib.20231231"
  "menhirSdk.20231231"
  "merlin.4.7-412"
  "mew.0.1.0"
  "mew_vi.0.5.0"
  "num.1.5"
  "ocaml.4.12.0"
  "ocaml-compiler-libs.v0.12.4"
  "ocaml-config.2"
  "ocaml-print-intf.1.2.0"
  "ocaml-syntax-shims.1.0.0"
  "ocaml-system.4.12.0"
  "ocaml_intrinsics.v0.15.2"
  "ocamlbuild.0.14.3"
  "ocamlfind.1.9.6"
  "ocplib-endian.1.2"
  "parsexp.v0.15.0"
  "ppx_assert.v0.15.0"
  "ppx_base.v0.15.0"
  "ppx_bench.v0.15.1"
  "ppx_bin_prot.v0.15.0"
  "ppx_cold.v0.15.0"
  "ppx_compare.v0.15.0"
  "ppx_custom_printf.v0.15.0"
  "ppx_derivers.1.2.1"
  "ppx_deriving.5.2.1"
  "ppx_disable_unused_warnings.v0.15.0"
  "ppx_enumerate.v0.15.0"
  "ppx_expect.v0.15.1"
  "ppx_fields_conv.v0.15.0"
  "ppx_fixed_literal.v0.15.0"
  "ppx_hash.v0.15.0"
  "ppx_here.v0.15.0"
  "ppx_ignore_instrumentation.v0.15.0"
  "ppx_inline_test.v0.15.1"
  "ppx_jane.v0.15.0"
  "ppx_let.v0.15.0"
  "ppx_log.v0.15.0"
  "ppx_module_timer.v0.15.0"
  "ppx_optcomp.v0.15.0"
  "ppx_optional.v0.15.0"
  "ppx_pipebang.v0.15.0"
  "ppx_quickchick_ocaml.~dev"
  "ppx_sexp_conv.v0.15.1"
  "ppx_sexp_message.v0.15.0"
  "ppx_sexp_value.v0.15.0"
  "ppx_stable.v0.15.0"
  "ppx_string.v0.15.0"
  "ppx_tools.6.6"
  "ppx_typerep_conv.v0.15.0"
  "ppx_variants_conv.v0.15.0"
  "ppxlib.0.31.0"
  "qco.~dev"
  "quickchick_ocaml.~dev"
  "re.1.11.0"
  "react.1.2.2"
  "result.1.5"
  "rresult.0.7.0"
  "seq.base"
  "sexp_pretty.v0.15.1"
  "sexplib.v0.15.1"
  "sexplib0.v0.15.1"
  "smart-print.0.3.0"
  "spawn.v0.15.1"
  "splittable_random.v0.15.0"
  "stdio.v0.15.0"
  "stdlib-shims.0.3.0"
  "time_now.v0.15.0"
  "timezone.v0.15.0"
  "topkg.1.0.7"
  "trie.1.0.0"
  "typerep.v0.15.0"
  "uchar.0.0.2"
  "utop.2.13.1"
  "uucp.15.0.0"
  "uuseg.15.0.0"
  "uutf.1.0.3"
  "variantslib.v0.15.0"
  "xdg.3.13.0"
  "yojson.2.1.2"
  "zarith.1.13"
  "zed.3.2.3"
]
pinned: [
  "coq.8.18.0"
  "coq-of-ocaml.dev"
  "merlin.4.7-412"
  "ppx_quickchick_ocaml.~dev"
  "qco.~dev"
  "quickchick_ocaml.~dev"
  "quickchick_ocaml2.~dev"
]
package "coq-of-ocaml" {
  opam-version: "2.0"
  version: "dev"
  synopsis: "Compile a subset of OCaml to Coq"
  maintainer: "dev@clarus.me"
  authors: "Guillaume Claret"
  license: "MIT"
  tags: ["keyword:compilation" "keyword:OCaml" "logpath:CoqOfOCaml"]
  homepage: "https://github.com/formal-land/coq-of-ocaml"
  bug-reports: "https://github.com/formal-land/coq-of-ocaml/issues"
  depends: [
    "bisect_ppx" {dev & >= "2.5.0"}
    "conf-ruby" {with-test}
    "csexp"
    "dune" {>= "2.8"}
    "menhir" {dev}
    "ocaml" {>= "4.12" & < "4.13"}
    "ocamlfind" {>= "1.5.2"}
    "result"
    "smart-print"
    "yojson" {>= "1.6.0"}
    "angstrom"
  ]
  depopts: ["coq"]
  conflicts: [
    "coq" {< "8.11"}
  ]
  build: [
    ["sh" "-c" "cd proofs && ./configure.sh"] {coq:installed}
    [make "-C" "proofs" "-j%{jobs}%"] {coq:installed}
    ["dune" "build" "-p" name "-j" jobs]
    [make "test"] {with-test}
  ]
  install: [make "-C" "proofs" "install"] {coq:installed}
  dev-repo: "git+https://github.com/formal-land/coq-of-ocaml.git"
  url {
    src:
      "file:///Users/nikhil/.opam/translate/.opam-switch/build/coq-of-ocaml.2.5.3+4.12"
  }
}
package "merlin" {
  opam-version: "2.0"
  version: "4.7-412"
  synopsis:
    "Editor helper, provides completion, typing and source browsing in Vim and Emacs"
  description:
    "Merlin is an assistant for editing OCaml code. It aims to provide the features available in modern IDEs: error reporting, auto completion, source browsing and much more."
  maintainer: "defree@gmail.com"
  authors: "The Merlin team"
  homepage: "https://github.com/ocaml/merlin"
  bug-reports: "https://github.com/ocaml/merlin/issues"
  depends: [
    "ocaml" {>= "4.12" & < "4.13"}
    "dune" {>= "2.7.0"}
    "dot-merlin-reader" {>= "4.0"}
    "yojson" {>= "1.6.0"}
    "conf-jq" {with-test}
    "csexp" {>= "1.2.3"}
    "result" {>= "1.5"}
    "menhir" {dev}
    "menhirLib" {dev}
    "menhirSdk" {dev}
  ]
  build: [
    ["dune" "subst"] {pinned}
    ["dune" "build" "-p" name "-j" jobs]
    ["dune" "runtest" "-p" "merlin,dot-merlin-reader" "-j" "1"] {with-test}
  ]
  post-messages:
    """\
merlin installed.

Quick setup for VIM
-------------------
Append this to your .vimrc to add merlin to vim's runtime-path:
  let g:opamshare = substitute(system('opam var share'),'\\n$','','''')
  execute "set rtp+=" . g:opamshare . "/merlin/vim"

Also run the following line in vim to index the documentation:
  :execute "helptags " . g:opamshare . "/merlin/vim/doc"

Quick setup for EMACS
-------------------
Add opam emacs directory to your load-path by appending this to your .emacs:
  (let ((opam-share (ignore-errors (car (process-lines "opam" "config" "var" "share")))))
   (when (and opam-share (file-directory-p opam-share))
    ;; Register Merlin
    (add-to-list 'load-path (expand-file-name "emacs/site-lisp" opam-share))
    (autoload 'merlin-mode "merlin" nil t nil)
    ;; Automatically start it in OCaml buffers
    (add-hook 'tuareg-mode-hook 'merlin-mode t)
    (add-hook 'caml-mode-hook 'merlin-mode t)
    ;; Use opam switch to lookup ocamlmerlin binary
    (setq merlin-command 'opam)))

Take a look at https://github.com/ocaml/merlin for more information

Quick setup with opam-user-setup
--------------------------------

Opam-user-setup support Merlin.

  $ opam user-setup install

should take care of basic setup.
See https://github.com/OCamlPro/opam-user-setup"""
      {success & !user-setup:installed}
  dev-repo: "git+https://github.com/ocaml/merlin.git"
  url {
    src:
      "file:///Users/nikhil/.opam/translate/.opam-switch/build/coq-of-ocaml.2.5.3+4.12/vendor/merlin"
  }
}
package "ppx_quickchick_ocaml" {
  opam-version: "2.0"
  version: "~dev"
  synopsis: "A short synopsis"
  description: "A longer description"
  maintainer: "Maintainer Name"
  authors: "Author Name"
  license: "LICENSE"
  tags: ["topics" "to describe" "your" "project"]
  homepage: "https://github.com/username/reponame"
  doc: "https://url/to/documentation"
  bug-reports: "https://github.com/username/reponame/issues"
  depends: [
    "ocaml"
    "dune" {>= "3.13"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/username/reponame.git"
  url {
    src: "git+file:///Users/nikhil/Code/Research/ppx_quickchick_ocaml#master"
  }
}
package "qco" {
  opam-version: "2.0"
  version: "~dev"
  synopsis: "A short synopsis"
  description: "A longer description"
  maintainer: "Maintainer Name"
  authors: "Author Name"
  license: "LICENSE"
  tags: ["topics" "to describe" "your" "project"]
  homepage: "https://github.com/username/reponame"
  doc: "https://url/to/documentation"
  bug-reports: "https://github.com/username/reponame/issues"
  depends: [
    "ocaml"
    "dune" {>= "3.13"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/username/reponame.git"
  url {
    src: "file:///Users/nikhil/Code/Research/qco"
  }
}
package "quickchick_ocaml" {
  opam-version: "2.0"
  version: "~dev"
  synopsis: "A short synopsis"
  description: "A longer description"
  maintainer: "Maintainer Name"
  authors: "Author Name"
  license: "LICENSE"
  tags: ["topics" "to describe" "your" "project"]
  homepage: "https://github.com/username/reponame"
  doc: "https://url/to/documentation"
  bug-reports: "https://github.com/username/reponame/issues"
  depends: [
    "ocaml"
    "dune" {>= "3.13"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/username/reponame.git"
  url {
    src: "git+file:///Users/nikhil/Code/Research/quickchick_ocaml#master"
  }
}
package "quickchick_ocaml2" {
  opam-version: "2.0"
  version: "~dev"
  synopsis: "A short synopsis"
  description: "A longer description"
  maintainer: "Maintainer Name"
  authors: "Author Name"
  license: "LICENSE"
  tags: ["topics" "to describe" "your" "project"]
  homepage: "https://github.com/username/reponame"
  doc: "https://url/to/documentation"
  bug-reports: "https://github.com/username/reponame/issues"
  depends: [
    "ocaml"
    "dune" {>= "3.13"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/username/reponame.git"
  url {
    src: "file:///Users/nikhil/Code/Research/quickchick_ocaml2"
  }
}
